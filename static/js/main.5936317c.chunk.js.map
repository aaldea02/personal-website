{"version":3,"sources":["components/Header.js","components/ContactForm.js","components/Resume.js","components/TypingText.js","components/MineSweeperEscape.js","App.js","index.js"],"names":["Header","React","createElement","className","href","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","message","setMessage","_useState7","_useState8","emailCount","setEmailCount","_useState9","_useState10","isFormDisabled","setIsFormDisabled","handleSubmit","_ref","_asyncToGenerator","_callee","event","_context","preventDefault","emailjs","send","from_name","from_email","console","log","alert","concat","t0","_x","apply","arguments","onSubmit","htmlFor","id","onChange","target","disabled","Resume","onClick","link","document","body","appendChild","click","removeChild","src","allow","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","n","toString","from","test","_unsupportedIterableToArray","F","s","e","_e","f","normalCompletion","didErr","step","_e2","arr","len","arr2","TypingText","displayedMessage","setDisplayedMessage","useEffect","isCancelled","text","_iterator","_step","_loop","_context2","char","setTimeout","t1","backspace","_ref2","_callee2","_context3","_x2","misspell","word","index","Math","floor","random","String","fromCharCode","toLowerCase","animate","_ref3","_callee3","words","_iterator2","_step2","misspelledWord","_context4","split","MineSweeperEscape","x","y","playerPosition","setPlayerPosition","exitPosition","setExitPosition","mines","setMines","lives","setLives","_useState11","_useState12","timer","setTimer","_useState13","_useState14","gameState","setGameState","_useState15","_useState16","scores","setScores","interval","setInterval","clearInterval","movePlayer","direction","newX","newY","max","min","gridSize","newPosition","some","mine","prevLives","updatedLives","handleKeyPress","window","addEventListener","removeEventListener","renderCellContent","join","randomPosition","startPosition","endPosition","mineCount","newMines","minePosition","gridContent","repeat","row","renderGrid","App","alt","DownloadResume","width","height","title","frameborder","allowfullscreen","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5936317c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header-container\">\r\n      <h1 className=\"header-text\">Arsen Aldea's Personal Website</h1>\r\n      <nav className=\"header-nav\">\r\n        <a href=\"#about-me\" className=\"nav-link\">About Me</a>\r\n        <a href=\"#contact\" className=\"nav-link\">Contact</a>\r\n        <a href=\"#projects\" className=\"nav-link\">Projects</a>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport emailjs from 'emailjs-com';\r\nimport './ContactForm.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [emailCount, setEmailCount] = useState(0);\r\n  const [isFormDisabled, setIsFormDisabled] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (emailCount < 10) {\r\n      try {\r\n        // Send email using EmailJS\r\n        await emailjs.send('service_dqt6duo', 'template_gmail', {\r\n          from_name: name,\r\n          from_email: email,\r\n          message: message,\r\n        }, 'zAd5WcmGlyUqv_ozv');\r\n\r\n        console.log('Email successfully sent!');\r\n        alert('Your message has been sent!');\r\n        setEmailCount(emailCount + 1);\r\n        console.log(`Email count: ${emailCount + 1}`);\r\n        if (emailCount === 9) {\r\n          setIsFormDisabled(true);\r\n        }\r\n        setName('');\r\n        setEmail('');\r\n        setMessage('');\r\n      } catch (error) {\r\n        console.error('Email failed to send:', error);\r\n        alert('There was an error sending your message. Please try again later.');\r\n      }\r\n    } else {\r\n      alert('Sorry, you have exceeded the limit of 10 emails per day.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={(event) => setName(event.target.value)}\r\n          disabled={isFormDisabled}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          disabled={isFormDisabled}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"message\">Message:</label>\r\n        <textarea\r\n          id=\"message\"\r\n          value={message}\r\n          onChange={(event) => setMessage(event.target.value)}\r\n          disabled={isFormDisabled}\r\n        ></textarea>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" disabled={isFormDisabled}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","// Resume.js\r\nimport React from 'react';\r\nimport './Resume.css';\r\n\r\nconst Resume = () => {\r\n  const handleClick = () => {\r\n    const link = document.createElement('a');\r\n    link.href = 'https://drive.google.com/uc?export=download&id=1a7Ej2kGbIfddAJ9WO23X368WJgfeXBsT';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <div className=\"resume-container\">\r\n      <button className=\"resume-button\" onClick={handleClick}>\r\n        Download Resume\r\n      </button>\r\n      <div className=\"resume-preview-container\">\r\n        <div className=\"resume-preview\">\r\n          <iframe\r\n            src=\"https://drive.google.com/file/d/1a7Ej2kGbIfddAJ9WO23X368WJgfeXBsT/preview\"\r\n            allow=\"autoplay\"\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst TypingText = () => {\r\n  const message =\r\n    \"I am a computer science student at the University of Florida, pursuing a Bachelor's degree in Liberal Arts and Sciences. I am passionate about software development and have gained hands-on experience working as a software developer intern at PerfectServe. My internship allowed me to refine my skills in various programming languages, front-end technologies, and back-end systems while working on real-world projects.\";\r\n\r\n  const [displayedMessage, setDisplayedMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    let isCancelled = false;\r\n\r\n    const type = async (text) => {\r\n      for (let char of text) {\r\n        if (!isCancelled) {\r\n          await new Promise((resolve) =>\r\n            setTimeout(() => {\r\n              setDisplayedMessage((prev) => prev + char);\r\n              resolve();\r\n            }, 65)\r\n          );\r\n        }\r\n      }\r\n    };\r\n\r\n    const backspace = async (text) => {\r\n      for (let i = 0; i < text.length; i++) {\r\n        if (!isCancelled) {\r\n          await new Promise((resolve) =>\r\n            setTimeout(() => {\r\n              setDisplayedMessage((prev) => prev.slice(0, -1));\r\n              resolve();\r\n            }, 100)\r\n          );\r\n        }\r\n      }\r\n    };\r\n\r\n    const misspell = (word) => {\r\n      const index = Math.floor(Math.random() * word.length);\r\n      const char = String.fromCharCode(\r\n        97 + Math.floor(Math.random() * 26)\r\n      ).toLowerCase();\r\n      return word.slice(0, index) + char + word.slice(index + 1);\r\n    };\r\n\r\n    const animate = async () => {\r\n      const words = message.split(' ');\r\n      for (let word of words) {\r\n        if (Math.random() < 0.1) {\r\n          const misspelledWord = misspell(word);\r\n          await type(misspelledWord);\r\n          await backspace(misspelledWord);\r\n        }\r\n        await type(word + ' ');\r\n      }\r\n      await type('.');\r\n      await backspace(message + ' .');\r\n      if (!isCancelled) {\r\n        animate();\r\n      }\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      isCancelled = true;\r\n    };\r\n  }, []);\r\n\r\n  return <div>{displayedMessage}</div>;\r\n};\r\n\r\nexport default TypingText;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst MineSweeperEscape = () => {\r\n  const gridSize = 10;\r\n  const minePercentage = 0.2;\r\n  const initialLives = 2;\r\n\r\n  const [grid, setGrid] = useState([]);\r\n  const [playerPosition, setPlayerPosition] = useState({ x: 0, y: 0 });\r\n  const [exitPosition, setExitPosition] = useState({ x: 0, y: 0 });\r\n  const [mines, setMines] = useState([]);\r\n  const [lives, setLives] = useState(initialLives);\r\n  const [timer, setTimer] = useState(0);\r\n  const [gameState, setGameState] = useState('idle'); // idle, playing, gameOver\r\n  const [scores, setScores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (gameState === 'playing') {\r\n      const interval = setInterval(() => {\r\n        setTimer((timer) => timer + 1);\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [gameState]);\r\n\r\n  const startGame = () => {\r\n    setGameState('playing');\r\n    setTimer(0);\r\n    setLives(initialLives);\r\n    setScores([]);\r\n  \r\n    // Random starting position and exit position\r\n    const randomPosition = () => ({\r\n      x: Math.floor(Math.random() * gridSize),\r\n      y: Math.floor(Math.random() * gridSize)\r\n    });\r\n  \r\n    let startPosition = randomPosition();\r\n    let endPosition = randomPosition();\r\n  \r\n    // Ensure starting and ending positions are not the same\r\n    while (\r\n      startPosition.x === endPosition.x &&\r\n      startPosition.y === endPosition.y\r\n    ) {\r\n      endPosition = randomPosition();\r\n    }\r\n  \r\n    setPlayerPosition(startPosition);\r\n    setExitPosition(endPosition);\r\n  \r\n    // Random mines\r\n    const mineCount = Math.floor(gridSize * gridSize * minePercentage);\r\n    let newMines = [];\r\n  \r\n    for (let i = 0; i < mineCount; i++) {\r\n      let minePosition = randomPosition();\r\n  \r\n      // Ensure mine is not on starting position or exit position\r\n      while (\r\n        (minePosition.x === startPosition.x &&\r\n          minePosition.y === startPosition.y) ||\r\n        (minePosition.x === endPosition.x && minePosition.y === endPosition.y)\r\n      ) {\r\n        minePosition = randomPosition();\r\n      }\r\n  \r\n      newMines.push(minePosition);\r\n    }\r\n  \r\n    setMines(newMines);\r\n  };\r\n  \r\n  const movePlayer = (direction) => {\r\n    let newX = playerPosition.x;\r\n    let newY = playerPosition.y;\r\n  \r\n    switch (direction) {\r\n      case 'up':\r\n        newY = Math.max(0, newY - 1);\r\n        break;\r\n      case 'down':\r\n        newY = Math.min(gridSize - 1, newY + 1);\r\n        break;\r\n      case 'left':\r\n        newX = Math.max(0, newX - 1);\r\n        break;\r\n      case 'right':\r\n        newX = Math.min(gridSize - 1, newX + 1);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  \r\n    const newPosition = { x: newX, y: newY };\r\n    setPlayerPosition(newPosition);\r\n  \r\n    // Check for mine collision\r\n    const mineCollision = mines.some(\r\n      (mine) => mine.x === newPosition.x && mine.y === newPosition.y\r\n    );\r\n  \r\n    if (mineCollision) {\r\n        setLives((prevLives) => {\r\n          const updatedLives = prevLives - 1;\r\n          if (updatedLives <= 0) {\r\n            setGameState('gameOver');\r\n            // Save score and display game over screen\r\n          }\r\n          return updatedLives;\r\n        });\r\n      } else {\r\n        // Check for exit collision\r\n        if (newPosition.x === exitPosition.x && newPosition.y === exitPosition.y) {\r\n          setGameState('gameOver');\r\n          // Save score and display victory screen\r\n        }\r\n      }\r\n  };\r\n  \r\n  \r\n  const handleKeyPress = (event) => {\r\n    if (gameState !== 'playing') return;\r\n  \r\n    switch (event.key) {\r\n      case 'w':\r\n        movePlayer('up');\r\n        break;\r\n      case 'a':\r\n        movePlayer('left');\r\n        break;\r\n      case 's':\r\n        movePlayer('down');\r\n        break;\r\n      case 'd':\r\n        movePlayer('right');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => window.removeEventListener('keydown', handleKeyPress);\r\n  }, [gameState]);\r\n\r\n  const renderCellContent = (x, y) => {\r\n    if (playerPosition.x === x && playerPosition.y === y) {\r\n      return '@';\r\n    }\r\n    if (exitPosition.x === x && exitPosition.y === y) {\r\n      return 'E';\r\n    }\r\n    return '.';\r\n  };\r\n\r\n  const renderGrid = () => {\r\n    const gridContent = [];\r\n    gridContent.push(\r\n      <div key=\"top-border\" className=\"grid-border\">\r\n        {'-'.repeat(gridSize * 3)}\r\n      </div>\r\n    );\r\n    for (let y = 0; y < gridSize; y++) {\r\n      const row = [];\r\n      for (let x = 0; x < gridSize; x++) {\r\n        row.push(\r\n          <span key={`cell-${x}-${y}`} className=\"grid-cell\">\r\n            {renderCellContent(x, y)}\r\n          </span>\r\n        );\r\n      }\r\n      gridContent.push(\r\n        <div key={`row-${y}`} className=\"grid-row\">\r\n          |{row.join('|')}|\r\n        </div>\r\n      );\r\n\r\n    }\r\n    gridContent.push(\r\n      <div key=\"bottom-border\" className=\"grid-border\">\r\n        {'-'.repeat(gridSize * 3)}\r\n      </div>\r\n    );\r\n    return gridContent;\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"minesweeper-escape\">\r\n      <h1>MineSweeper Escape</h1>\r\n      <p>\r\n        Instructions: Use WASD keys to move the player (@) through the grid to\r\n        reach the exit (E). Beware of hidden mines! You have 3 lives.\r\n      </p>\r\n      <div className=\"game-info\">\r\n        <div>Timer: {timer}s</div>\r\n        <div>Lives: {lives}</div>\r\n        <div>Scores: {scores.join(', ')}</div>\r\n      </div>\r\n      {gameState === 'idle' && <button onClick={startGame}>Start Game</button>}\r\n      <div className=\"grid-container\">{renderGrid()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MineSweeperEscape;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport ContactForm from './components/ContactForm';\r\nimport DownloadResume from './components/Resume';\r\nimport TypingText from './components/TypingText';\r\nimport MineSweeperEscape from './components/MineSweeperEscape';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <main>\r\n        <section id=\"about-me\">\r\n          <h2>About Me</h2>\r\n          <div className=\"about-me-content\">\r\n            <img src=\"https://drive.google.com/uc?export=download&id=1U4Inr_HO-0hBzfYjjxtD-bXeZRYi7P2_\" alt=\"Your portrait\" className=\"portrait\" />\r\n            <div className=\"about-me-text\">\r\n              <TypingText/>\r\n              <div className=\"about-me-links\">\r\n                <a href=\"#contact\" className=\"scroll-link\">Contact</a>\r\n                <a href=\"#projects\" className=\"scroll-link\">Projects</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section id=\"contact\">\r\n          <h2>Contact Me</h2>\r\n          <div className=\"contact-content\">\r\n            <ContactForm />\r\n            <div className=\"contact-links\">\r\n              <a href=\"mailto:arsena0202@gmail.com\" className=\"contact-link\">Email</a>\r\n              <a href=\"https://github.com/aaldea02\" className=\"contact-link\">GitHub</a>\r\n              <a href=\"https://www.linkedin.com/in/your_username/\" className=\"contact-link\">LinkedIn</a>\r\n            </div>\r\n            <div className=\"resume-download\">\r\n              <DownloadResume />\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section id=\"projects\">\r\n          <h2>Personal Projects</h2>\r\n          <div className=\"project\">\r\n            <h3>Diamond Pathfinder</h3>\r\n            <p>\r\n            The Diamond Pathfinder project is a pathfinding optimization study for the popular game Minecraft, specifically focusing on its Baritone mod. I built and compared two classic pathfinding algorithms, Bellman-Ford and Dijkstra's, implemented in Java to analyze their efficiency in the game environment. By logging the results using Java and MySQL, I was able to identify the optimal choice for pathfinding in Minecraft's Baritone mod, improving in-game navigation and resource gathering. Through this project, I developed skills in Java programming, algorithm design, and data analysis using MySQL.\r\n            </p>\r\n            <div className=\"video-container\">\r\n              <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src=\"https://www.youtube.com/embed/lS4vblYZpMA\"\r\n                title=\"Diamond Pathfinder\"\r\n                frameborder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        <MineSweeperEscape/>\r\n        </section>\r\n      </main>\r\n      <div className=\"space\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      \n      <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}